
(defpackage :cl-primality-test
  (:use :cl :stefil :iterate :cl-primality)
  (:export
   #:run-tests
   #:large-primes
   #:first-thousand
   #:carmichael-composites))

(in-package :cl-primality-test)

(in-root-suite)

(deftest first-thousand ()
  (let ((primes
          '(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89
            97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181
            191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277
            281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383
            389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487
            491 499 503 509 521 523 541 547 557 563 569 571 577 587 593 599 601
            607 613 617 619 631 641 643 647 653 659 661 673 677 683 691 701 709
            719 727 733 739 743 751 757 761 769 773 787 797 809 811 821 823 827
            829 839 853 857 859 863 877 881 883 887 907 911 919 929 937 941 947
            953 967 971 977 983 991 997)))
    (is (equal
         (iter (for i from 2 below 1000)
           (when (primep i)
             (collect i)))
         primes))
    (iter (for val in primes)
      (is (primep val)))))

(deftest large-primes ()
  (let ((primes
          '(4046079151 8495506964523780137 133088652026046221870786391272310665087
            159678403005528741712701297670535077909995450035569120001792277048096634977029
            1319555095718737669867569241401375915874309136393649758507617611736270227367484387074528211688238035301669166162474267144705266142394657501847987310719373
            288509100727167570717402120421173215845974471142405583645217548598913107529673421887028993836978374845245443461352615717241293666798362262692077227459360488145732934972880763384928884800382870951014013770913001735368058817398882351445476041020355302944756891289999976497756364456096074567317797608453633728761)))
    (iter (for val in primes)
      (is (primep val)))))

;; @The test <<carmichael-composites>> tests for composites that are notoriously
;; difficult to detect for some probabilistic algorithms based on Fermat's
;; little theorem.

(deftest carmichael-composites ()
  (let ((carmichaels
          ;; Taken from the wikipedia page.
          '((561 1105 1729 2465 2821 6601 8911)
            (41041 62745 63973 75361 101101 126217 172081 188461 278545 340561)
            (825265)
            (321197185)
            (5394826801)
            (232250619601)
            (9746347772161))))
    (iter (for cars in carmichaels)
      (iter (for num in cars)
        (is (not (primep num)))))))

(defun run-tests ()
  (first-thousand)
  (large-primes)
  (carmichael-composites))
